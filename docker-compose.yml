services:
  # 后端API服务
  backend:
    # 优先使用DockerHub镜像，如果不存在则从本地构建
    image: mintisan/ghosttrack-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ghosttrack-backend
    restart: unless-stopped
    ports:
      - "8088:8000"
    environment:
      - PYTHONPATH=/app
    networks:
      - ghosttrack-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 前端Web服务
  frontend:
    # 优先使用DockerHub镜像，如果不存在则从本地构建
    image: mintisan/ghosttrack-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ghosttrack-frontend
    restart: unless-stopped
    ports:
      - "8192:80"
    depends_on:
      - backend
    networks:
      - ghosttrack-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  ghosttrack-network:
    driver: bridge

volumes:
  # 如果需要持久化数据，可以添加卷
  app-data:
    driver: local